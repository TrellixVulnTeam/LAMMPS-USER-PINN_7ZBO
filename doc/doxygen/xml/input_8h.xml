<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="input_8h" kind="file" language="C++">
    <compoundname>input.h</compoundname>
    <innerclass refid="classLAMMPS__NS_1_1Input" prot="public">LAMMPS_NS::Input</innerclass>
    <innernamespace refid="namespaceLAMMPS__NS">LAMMPS_NS</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>----------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/>LAMMPS<sp/>-<sp/>Large-scale<sp/>Atomic/Molecular<sp/>Massively<sp/>Parallel<sp/>Simulator</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>http://lammps.sandia.gov,<sp/>Sandia<sp/>National<sp/>Laboratories</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>Steve<sp/>Plimpton,<sp/>sjplimp@sandia.gov</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(2003)<sp/>Sandia<sp/>Corporation.<sp/><sp/>Under<sp/>the<sp/>terms<sp/>of<sp/>Contract</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>DE-AC04-94AL85000<sp/>with<sp/>Sandia<sp/>Corporation,<sp/>the<sp/>U.S.<sp/>Government<sp/>retains</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>certain<sp/>rights<sp/>in<sp/>this<sp/>software.<sp/><sp/>This<sp/>software<sp/>is<sp/>distributed<sp/>under</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>See<sp/>the<sp/>README<sp/>file<sp/>in<sp/>the<sp/>top-level<sp/>LAMMPS<sp/>directory.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LMP_INPUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LMP_INPUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pointers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">LAMMPS_NS<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classLAMMPS__NS_1_1Input" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classLAMMPS__NS_1_1Input" kindref="compound">Input</ref><sp/>:<sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classLAMMPS__NS_1_1Pointers" kindref="compound">Pointers</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Info;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Error;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Deprecated;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SimpleCommandsTest_Echo_Test;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>narg;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#<sp/>of<sp/>command<sp/>args</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**arg;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parsed<sp/>args<sp/>for<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Variable<sp/>*variable;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defined<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="classLAMMPS__NS_1_1Input_1abd21b9a5d98f5ac7b05ef80bec6f706f" kindref="member">Input</ref>(</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/><ref refid="classLAMMPS__NS_1_1LAMMPS" kindref="compound">LAMMPS</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>~<ref refid="classLAMMPS__NS_1_1Input" kindref="compound">Input</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classLAMMPS__NS_1_1Input_1a5dafc7f590ea20432d3a8ca63e7ee96a" kindref="member">file</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>all<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classLAMMPS__NS_1_1Input_1a5dafc7f590ea20432d3a8ca63e7ee96a" kindref="member">file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>an<sp/>input<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classLAMMPS__NS_1_1Input_1ad2ba7d137bc5ca20182ef7cd050940ed" kindref="member">one</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;);<sp/></highlight><highlight class="comment">//<sp/>process<sp/>a<sp/>single<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>substitute(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>substitute<sp/>for<sp/>variables<sp/>in<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_echo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;);<sp/></highlight><highlight class="comment">//<sp/>send<sp/>text<sp/>to<sp/>active<sp/>echo<sp/>file<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ptr<sp/>to<sp/>current<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>echo_screen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>no,<sp/>1<sp/>=<sp/>yes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>echo_log;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>no,<sp/>1<sp/>=<sp/>yes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>me;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>proc<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxarg;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>#<sp/>of<sp/>args<sp/>in<sp/>arg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*line,*copy,*work;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>line<sp/>&amp;<sp/>copy<sp/>and<sp/>work<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxline,maxcopy,maxwork;<sp/></highlight><highlight class="comment">//<sp/>max<sp/>lengths<sp/>of<sp/>char<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfile,maxfile;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>#<sp/>and<sp/>max<sp/>#<sp/>of<sp/>open<sp/>input<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>label_active;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>no<sp/>label,<sp/>1<sp/>=<sp/>looking<sp/>for<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*labelstr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>label<sp/>string<sp/>being<sp/>looked<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jump_skip;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>if<sp/>skipping<sp/>next<sp/>jump,<sp/>0<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>FILE<sp/>**infiles;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>of<sp/>open<sp/>input<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*CommandCreator)(<ref refid="classLAMMPS__NS_1_1LAMMPS" kindref="compound">LAMMPS</ref><sp/>*,<sp/>int,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,CommandCreator&gt;<sp/>CommandCreatorMap;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>CommandCreatorMap<sp/>*command_map;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>command_creator(<ref refid="classLAMMPS__NS_1_1LAMMPS" kindref="compound">LAMMPS</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parse();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>an<sp/>input<sp/>text<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nextword(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>next<sp/>word<sp/>in<sp/>string<sp/>with<sp/>quotes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numtriple(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>number<sp/>of<sp/>triple<sp/>quotes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reallocate(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>reallocate<sp/>a<sp/>char<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>execute_command();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>execute<sp/>a<sp/>single<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>script<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>echo();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ifthenelse();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>include();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jump();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>label();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>log();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>next_command();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>partition();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>python();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>quit();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shell();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>variable_command();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>angle_coeff();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LAMMPS<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>angle_style();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>atom_modify();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>atom_style();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bond_coeff();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bond_style();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bond_write();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>boundary();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>box();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>comm_modify();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>comm_style();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>compute();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>compute_modify();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dielectric();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dihedral_coeff();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dihedral_style();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dimension();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump_modify();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fix();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fix_modify();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>group_command();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>improper_coeff();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>improper_style();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>kspace_modify();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>kspace_style();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lattice();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mass();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>min_modify();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>min_style();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>molecule();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>neigh_modify();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>neighbor_command();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>newton();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>package();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pair_coeff();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pair_modify();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pair_style();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pair_write();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processors();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>region();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_timestep();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restart();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run_style();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>special_bonds();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>suffix();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>thermo();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>thermo_modify();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>thermo_style();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>timestep();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>timer_command();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uncompute();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>undump();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unfix();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>units();</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ERROR/WARNING<sp/>messages:</highlight></codeline>
<codeline lineno="152"><highlight class="comment"></highlight></codeline>
<codeline lineno="153"><highlight class="comment">E:<sp/>Label<sp/>wasn&apos;t<sp/>found<sp/>in<sp/>input<sp/>script</highlight></codeline>
<codeline lineno="154"><highlight class="comment"></highlight></codeline>
<codeline lineno="155"><highlight class="comment">Self-explanatory.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"></highlight></codeline>
<codeline lineno="157"><highlight class="comment">E:<sp/>Unknown<sp/>command:<sp/>%s</highlight></codeline>
<codeline lineno="158"><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment">The<sp/>command<sp/>is<sp/>not<sp/>known<sp/>to<sp/>LAMMPS.<sp/><sp/>Check<sp/>the<sp/>input<sp/>script.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment">E:<sp/>Invalid<sp/>use<sp/>of<sp/>library<sp/>file()<sp/>function</highlight></codeline>
<codeline lineno="162"><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment">This<sp/>function<sp/>is<sp/>called<sp/>thru<sp/>the<sp/>library<sp/>interface.<sp/><sp/>This</highlight></codeline>
<codeline lineno="164"><highlight class="comment">error<sp/>should<sp/>not<sp/>occur.<sp/><sp/>Contact<sp/>the<sp/>developers<sp/>if<sp/>it<sp/>does.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment">E:<sp/>Cannot<sp/>open<sp/>input<sp/>script<sp/>%s</highlight></codeline>
<codeline lineno="167"><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment">Self-explanatory.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"></highlight></codeline>
<codeline lineno="170"><highlight class="comment">E:<sp/>Unbalanced<sp/>quotes<sp/>in<sp/>input<sp/>line</highlight></codeline>
<codeline lineno="171"><highlight class="comment"></highlight></codeline>
<codeline lineno="172"><highlight class="comment">No<sp/>matching<sp/>end<sp/>double<sp/>quote<sp/>was<sp/>found<sp/>following<sp/>a<sp/>leading<sp/>double</highlight></codeline>
<codeline lineno="173"><highlight class="comment">quote.</highlight></codeline>
<codeline lineno="174"><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment">E:<sp/>Incorrect<sp/>conversion<sp/>in<sp/>format<sp/>string</highlight></codeline>
<codeline lineno="176"><highlight class="comment"></highlight></codeline>
<codeline lineno="177"><highlight class="comment">An<sp/>immediate<sp/>variable<sp/>with<sp/>format<sp/>suffix<sp/>was<sp/>not<sp/>using</highlight></codeline>
<codeline lineno="178"><highlight class="comment">either<sp/>a<sp/>%f,<sp/>a<sp/>%g,<sp/>or<sp/>a<sp/>%e<sp/>conversion<sp/>in<sp/>the<sp/>format<sp/>suffix.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment">E:<sp/>Input<sp/>line<sp/>quote<sp/>not<sp/>followed<sp/>by<sp/>white-space</highlight></codeline>
<codeline lineno="181"><highlight class="comment"></highlight></codeline>
<codeline lineno="182"><highlight class="comment">An<sp/>end<sp/>quote<sp/>must<sp/>be<sp/>followed<sp/>by<sp/>white-space.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment">E:<sp/>Invalid<sp/>variable<sp/>name</highlight></codeline>
<codeline lineno="185"><highlight class="comment"></highlight></codeline>
<codeline lineno="186"><highlight class="comment">Variable<sp/>name<sp/>used<sp/>in<sp/>an<sp/>input<sp/>script<sp/>line<sp/>is<sp/>invalid.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"></highlight></codeline>
<codeline lineno="188"><highlight class="comment">E:<sp/>Invalid<sp/>immediate<sp/>variable</highlight></codeline>
<codeline lineno="189"><highlight class="comment"></highlight></codeline>
<codeline lineno="190"><highlight class="comment">Syntax<sp/>of<sp/>immediate<sp/>value<sp/>is<sp/>incorrect.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"></highlight></codeline>
<codeline lineno="192"><highlight class="comment">E:<sp/>Substitution<sp/>for<sp/>illegal<sp/>variable<sp/>%s</highlight></codeline>
<codeline lineno="193"><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment">UNDOCUMENTED</highlight></codeline>
<codeline lineno="195"><highlight class="comment"></highlight></codeline>
<codeline lineno="196"><highlight class="comment">E:<sp/>Illegal<sp/>...<sp/>command</highlight></codeline>
<codeline lineno="197"><highlight class="comment"></highlight></codeline>
<codeline lineno="198"><highlight class="comment">Self-explanatory.<sp/><sp/>Check<sp/>the<sp/>input<sp/>script<sp/>syntax<sp/>and<sp/>compare<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="199"><highlight class="comment">documentation<sp/>for<sp/>the<sp/>command.<sp/><sp/>You<sp/>can<sp/>use<sp/>-echo<sp/>screen<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="200"><highlight class="comment">command-line<sp/>option<sp/>when<sp/>running<sp/>LAMMPS<sp/>to<sp/>see<sp/>the<sp/>offending<sp/>line.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment">E:<sp/>Cannot<sp/>use<sp/>include<sp/>command<sp/>within<sp/>an<sp/>if<sp/>command</highlight></codeline>
<codeline lineno="203"><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment">Self-explanatory.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"></highlight></codeline>
<codeline lineno="206"><highlight class="comment">E:<sp/>Cannot<sp/>open<sp/>logfile<sp/>%s</highlight></codeline>
<codeline lineno="207"><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment">The<sp/>LAMMPS<sp/>log<sp/>file<sp/>specified<sp/>in<sp/>the<sp/>input<sp/>script<sp/>cannot<sp/>be<sp/>opened.</highlight></codeline>
<codeline lineno="209"><highlight class="comment">Check<sp/>that<sp/>the<sp/>path<sp/>and<sp/>name<sp/>are<sp/>correct.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment">E:<sp/>Cannot<sp/>open<sp/>print<sp/>file<sp/>%s</highlight></codeline>
<codeline lineno="212"><highlight class="comment"></highlight></codeline>
<codeline lineno="213"><highlight class="comment">Self-explanatory.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"></highlight></codeline>
<codeline lineno="215"><highlight class="comment">W:<sp/>Shell<sp/>command<sp/>&apos;%s&apos;<sp/>failed<sp/>with<sp/>error<sp/>&apos;%s&apos;</highlight></codeline>
<codeline lineno="216"><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment">Self-explanatory.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"></highlight></codeline>
<codeline lineno="219"><highlight class="comment">W:<sp/>Shell<sp/>command<sp/>returned<sp/>with<sp/>non-zero<sp/>status</highlight></codeline>
<codeline lineno="220"><highlight class="comment"></highlight></codeline>
<codeline lineno="221"><highlight class="comment">This<sp/>may<sp/>indicate<sp/>the<sp/>shell<sp/>command<sp/>did<sp/>not<sp/>operate<sp/>as<sp/>expected.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"></highlight></codeline>
<codeline lineno="223"><highlight class="comment">E:<sp/>Angle_coeff<sp/>command<sp/>before<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="224"><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment">The<sp/>angle_coeff<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>before<sp/>a<sp/>read_data,</highlight></codeline>
<codeline lineno="226"><highlight class="comment">read_restart,<sp/>or<sp/>create_box<sp/>command.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"></highlight></codeline>
<codeline lineno="228"><highlight class="comment">E:<sp/>Angle_coeff<sp/>command<sp/>before<sp/>angle_style<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="229"><highlight class="comment"></highlight></codeline>
<codeline lineno="230"><highlight class="comment">Coefficients<sp/>cannot<sp/>be<sp/>set<sp/>in<sp/>the<sp/>data<sp/>file<sp/>or<sp/>via<sp/>the<sp/>angle_coeff</highlight></codeline>
<codeline lineno="231"><highlight class="comment">command<sp/>until<sp/>an<sp/>angle_style<sp/>has<sp/>been<sp/>assigned.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment">E:<sp/>Angle_coeff<sp/>command<sp/>when<sp/>no<sp/>angles<sp/>allowed</highlight></codeline>
<codeline lineno="234"><highlight class="comment"></highlight></codeline>
<codeline lineno="235"><highlight class="comment">The<sp/>chosen<sp/>atom<sp/>style<sp/>does<sp/>not<sp/>allow<sp/>for<sp/>angles<sp/>to<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"></highlight></codeline>
<codeline lineno="237"><highlight class="comment">E:<sp/>Angle_style<sp/>command<sp/>when<sp/>no<sp/>angles<sp/>allowed</highlight></codeline>
<codeline lineno="238"><highlight class="comment"></highlight></codeline>
<codeline lineno="239"><highlight class="comment">The<sp/>chosen<sp/>atom<sp/>style<sp/>does<sp/>not<sp/>allow<sp/>for<sp/>angles<sp/>to<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"></highlight></codeline>
<codeline lineno="241"><highlight class="comment">E:<sp/>Atom_style<sp/>command<sp/>after<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="242"><highlight class="comment"></highlight></codeline>
<codeline lineno="243"><highlight class="comment">The<sp/>atom_style<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>after<sp/>a<sp/>read_data,</highlight></codeline>
<codeline lineno="244"><highlight class="comment">read_restart,<sp/>or<sp/>create_box<sp/>command.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"></highlight></codeline>
<codeline lineno="246"><highlight class="comment">E:<sp/>Bond_coeff<sp/>command<sp/>before<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="247"><highlight class="comment"></highlight></codeline>
<codeline lineno="248"><highlight class="comment">The<sp/>bond_coeff<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>before<sp/>a<sp/>read_data,</highlight></codeline>
<codeline lineno="249"><highlight class="comment">read_restart,<sp/>or<sp/>create_box<sp/>command.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"></highlight></codeline>
<codeline lineno="251"><highlight class="comment">E:<sp/>Bond_coeff<sp/>command<sp/>before<sp/>bond_style<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="252"><highlight class="comment"></highlight></codeline>
<codeline lineno="253"><highlight class="comment">Coefficients<sp/>cannot<sp/>be<sp/>set<sp/>in<sp/>the<sp/>data<sp/>file<sp/>or<sp/>via<sp/>the<sp/>bond_coeff</highlight></codeline>
<codeline lineno="254"><highlight class="comment">command<sp/>until<sp/>an<sp/>bond_style<sp/>has<sp/>been<sp/>assigned.</highlight></codeline>
<codeline lineno="255"><highlight class="comment"></highlight></codeline>
<codeline lineno="256"><highlight class="comment">E:<sp/>Bond_coeff<sp/>command<sp/>when<sp/>no<sp/>bonds<sp/>allowed</highlight></codeline>
<codeline lineno="257"><highlight class="comment"></highlight></codeline>
<codeline lineno="258"><highlight class="comment">The<sp/>chosen<sp/>atom<sp/>style<sp/>does<sp/>not<sp/>allow<sp/>for<sp/>bonds<sp/>to<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="259"><highlight class="comment"></highlight></codeline>
<codeline lineno="260"><highlight class="comment">E:<sp/>Bond_style<sp/>command<sp/>when<sp/>no<sp/>bonds<sp/>allowed</highlight></codeline>
<codeline lineno="261"><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment">The<sp/>chosen<sp/>atom<sp/>style<sp/>does<sp/>not<sp/>allow<sp/>for<sp/>bonds<sp/>to<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment">E:<sp/>Bond_write<sp/>command<sp/>when<sp/>no<sp/>bonds<sp/>allowed</highlight></codeline>
<codeline lineno="265"><highlight class="comment"></highlight></codeline>
<codeline lineno="266"><highlight class="comment">UNDOCUMENTED</highlight></codeline>
<codeline lineno="267"><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment">E:<sp/>Bond_write<sp/>command<sp/>before<sp/>bond_style<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="269"><highlight class="comment"></highlight></codeline>
<codeline lineno="270"><highlight class="comment">UNDOCUMENTED</highlight></codeline>
<codeline lineno="271"><highlight class="comment"></highlight></codeline>
<codeline lineno="272"><highlight class="comment">E:<sp/>Boundary<sp/>command<sp/>after<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="273"><highlight class="comment"></highlight></codeline>
<codeline lineno="274"><highlight class="comment">The<sp/>boundary<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>after<sp/>a<sp/>read_data,<sp/>read_restart,</highlight></codeline>
<codeline lineno="275"><highlight class="comment">or<sp/>create_box<sp/>command.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"></highlight></codeline>
<codeline lineno="277"><highlight class="comment">E:<sp/>Box<sp/>command<sp/>after<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="278"><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment">The<sp/>box<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>after<sp/>a<sp/>read_data,<sp/>read_restart,<sp/>or</highlight></codeline>
<codeline lineno="280"><highlight class="comment">create_box<sp/>command.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"></highlight></codeline>
<codeline lineno="282"><highlight class="comment">E:<sp/>Dihedral_coeff<sp/>command<sp/>before<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="283"><highlight class="comment"></highlight></codeline>
<codeline lineno="284"><highlight class="comment">The<sp/>dihedral_coeff<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>before<sp/>a<sp/>read_data,</highlight></codeline>
<codeline lineno="285"><highlight class="comment">read_restart,<sp/>or<sp/>create_box<sp/>command.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"></highlight></codeline>
<codeline lineno="287"><highlight class="comment">E:<sp/>Dihedral_coeff<sp/>command<sp/>before<sp/>dihedral_style<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="288"><highlight class="comment"></highlight></codeline>
<codeline lineno="289"><highlight class="comment">Coefficients<sp/>cannot<sp/>be<sp/>set<sp/>in<sp/>the<sp/>data<sp/>file<sp/>or<sp/>via<sp/>the<sp/>dihedral_coeff</highlight></codeline>
<codeline lineno="290"><highlight class="comment">command<sp/>until<sp/>an<sp/>dihedral_style<sp/>has<sp/>been<sp/>assigned.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"></highlight></codeline>
<codeline lineno="292"><highlight class="comment">E:<sp/>Dihedral_coeff<sp/>command<sp/>when<sp/>no<sp/>dihedrals<sp/>allowed</highlight></codeline>
<codeline lineno="293"><highlight class="comment"></highlight></codeline>
<codeline lineno="294"><highlight class="comment">The<sp/>chosen<sp/>atom<sp/>style<sp/>does<sp/>not<sp/>allow<sp/>for<sp/>dihedrals<sp/>to<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"></highlight></codeline>
<codeline lineno="296"><highlight class="comment">E:<sp/>Dihedral_style<sp/>command<sp/>when<sp/>no<sp/>dihedrals<sp/>allowed</highlight></codeline>
<codeline lineno="297"><highlight class="comment"></highlight></codeline>
<codeline lineno="298"><highlight class="comment">The<sp/>chosen<sp/>atom<sp/>style<sp/>does<sp/>not<sp/>allow<sp/>for<sp/>dihedrals<sp/>to<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"></highlight></codeline>
<codeline lineno="300"><highlight class="comment">E:<sp/>Dimension<sp/>command<sp/>after<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="301"><highlight class="comment"></highlight></codeline>
<codeline lineno="302"><highlight class="comment">The<sp/>dimension<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>after<sp/>a<sp/>read_data,</highlight></codeline>
<codeline lineno="303"><highlight class="comment">read_restart,<sp/>or<sp/>create_box<sp/>command.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"></highlight></codeline>
<codeline lineno="305"><highlight class="comment">E:<sp/>Improper_coeff<sp/>command<sp/>before<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="306"><highlight class="comment"></highlight></codeline>
<codeline lineno="307"><highlight class="comment">The<sp/>improper_coeff<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>before<sp/>a<sp/>read_data,</highlight></codeline>
<codeline lineno="308"><highlight class="comment">read_restart,<sp/>or<sp/>create_box<sp/>command.</highlight></codeline>
<codeline lineno="309"><highlight class="comment"></highlight></codeline>
<codeline lineno="310"><highlight class="comment">E:<sp/>Improper_coeff<sp/>command<sp/>before<sp/>improper_style<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="311"><highlight class="comment"></highlight></codeline>
<codeline lineno="312"><highlight class="comment">Coefficients<sp/>cannot<sp/>be<sp/>set<sp/>in<sp/>the<sp/>data<sp/>file<sp/>or<sp/>via<sp/>the<sp/>improper_coeff</highlight></codeline>
<codeline lineno="313"><highlight class="comment">command<sp/>until<sp/>an<sp/>improper_style<sp/>has<sp/>been<sp/>assigned.</highlight></codeline>
<codeline lineno="314"><highlight class="comment"></highlight></codeline>
<codeline lineno="315"><highlight class="comment">E:<sp/>Improper_coeff<sp/>command<sp/>when<sp/>no<sp/>impropers<sp/>allowed</highlight></codeline>
<codeline lineno="316"><highlight class="comment"></highlight></codeline>
<codeline lineno="317"><highlight class="comment">The<sp/>chosen<sp/>atom<sp/>style<sp/>does<sp/>not<sp/>allow<sp/>for<sp/>impropers<sp/>to<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"></highlight></codeline>
<codeline lineno="319"><highlight class="comment">E:<sp/>Improper_style<sp/>command<sp/>when<sp/>no<sp/>impropers<sp/>allowed</highlight></codeline>
<codeline lineno="320"><highlight class="comment"></highlight></codeline>
<codeline lineno="321"><highlight class="comment">The<sp/>chosen<sp/>atom<sp/>style<sp/>does<sp/>not<sp/>allow<sp/>for<sp/>impropers<sp/>to<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"></highlight></codeline>
<codeline lineno="323"><highlight class="comment">E:<sp/>KSpace<sp/>style<sp/>has<sp/>not<sp/>yet<sp/>been<sp/>set</highlight></codeline>
<codeline lineno="324"><highlight class="comment"></highlight></codeline>
<codeline lineno="325"><highlight class="comment">Cannot<sp/>use<sp/>kspace_modify<sp/>command<sp/>until<sp/>a<sp/>kspace<sp/>style<sp/>is<sp/>set.</highlight></codeline>
<codeline lineno="326"><highlight class="comment"></highlight></codeline>
<codeline lineno="327"><highlight class="comment">E:<sp/>Mass<sp/>command<sp/>before<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="328"><highlight class="comment"></highlight></codeline>
<codeline lineno="329"><highlight class="comment">The<sp/>mass<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>before<sp/>a<sp/>read_data,<sp/>read_restart,<sp/>or</highlight></codeline>
<codeline lineno="330"><highlight class="comment">create_box<sp/>command.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"></highlight></codeline>
<codeline lineno="332"><highlight class="comment">E:<sp/>Min_style<sp/>command<sp/>before<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="333"><highlight class="comment"></highlight></codeline>
<codeline lineno="334"><highlight class="comment">The<sp/>min_style<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>before<sp/>a<sp/>read_data,<sp/>read_restart,</highlight></codeline>
<codeline lineno="335"><highlight class="comment">or<sp/>create_box<sp/>command.</highlight></codeline>
<codeline lineno="336"><highlight class="comment"></highlight></codeline>
<codeline lineno="337"><highlight class="comment">E:<sp/>Newton<sp/>bond<sp/>change<sp/>after<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="338"><highlight class="comment"></highlight></codeline>
<codeline lineno="339"><highlight class="comment">The<sp/>newton<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>to<sp/>change<sp/>the<sp/>newton<sp/>bond<sp/>value</highlight></codeline>
<codeline lineno="340"><highlight class="comment">after<sp/>a<sp/>read_data,<sp/>read_restart,<sp/>or<sp/>create_box<sp/>command.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"></highlight></codeline>
<codeline lineno="342"><highlight class="comment">E:<sp/>Package<sp/>command<sp/>after<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="343"><highlight class="comment"></highlight></codeline>
<codeline lineno="344"><highlight class="comment">The<sp/>package<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>after<sp/>a<sp/>read_data,<sp/>read_restart,<sp/>or</highlight></codeline>
<codeline lineno="345"><highlight class="comment">create_box<sp/>command.</highlight></codeline>
<codeline lineno="346"><highlight class="comment"></highlight></codeline>
<codeline lineno="347"><highlight class="comment">E:<sp/>Package<sp/>gpu<sp/>command<sp/>without<sp/>GPU<sp/>package<sp/>installed</highlight></codeline>
<codeline lineno="348"><highlight class="comment"></highlight></codeline>
<codeline lineno="349"><highlight class="comment">The<sp/>GPU<sp/>package<sp/>must<sp/>be<sp/>installed<sp/>via<sp/>&quot;make<sp/>yes-gpu&quot;<sp/>before<sp/>LAMMPS<sp/>is</highlight></codeline>
<codeline lineno="350"><highlight class="comment">built.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"></highlight></codeline>
<codeline lineno="352"><highlight class="comment">E:<sp/>Package<sp/>kokkos<sp/>command<sp/>without<sp/>KOKKOS<sp/>package<sp/>enabled</highlight></codeline>
<codeline lineno="353"><highlight class="comment"></highlight></codeline>
<codeline lineno="354"><highlight class="comment">The<sp/>KOKKOS<sp/>package<sp/>must<sp/>be<sp/>installed<sp/>via<sp/>&quot;make<sp/>yes-kokkos&quot;<sp/>before</highlight></codeline>
<codeline lineno="355"><highlight class="comment">LAMMPS<sp/>is<sp/>built,<sp/>and<sp/>the<sp/>&quot;-k<sp/>on&quot;<sp/>must<sp/>be<sp/>used<sp/>to<sp/>enable<sp/>the<sp/>package.</highlight></codeline>
<codeline lineno="356"><highlight class="comment"></highlight></codeline>
<codeline lineno="357"><highlight class="comment">E:<sp/>Package<sp/>omp<sp/>command<sp/>without<sp/>USER-OMP<sp/>package<sp/>installed</highlight></codeline>
<codeline lineno="358"><highlight class="comment"></highlight></codeline>
<codeline lineno="359"><highlight class="comment">The<sp/>USER-OMP<sp/>package<sp/>must<sp/>be<sp/>installed<sp/>via<sp/>&quot;make<sp/>yes-user-omp&quot;<sp/>before</highlight></codeline>
<codeline lineno="360"><highlight class="comment">LAMMPS<sp/>is<sp/>built.</highlight></codeline>
<codeline lineno="361"><highlight class="comment"></highlight></codeline>
<codeline lineno="362"><highlight class="comment">E:<sp/>Package<sp/>intel<sp/>command<sp/>without<sp/>USER-INTEL<sp/>package<sp/>installed</highlight></codeline>
<codeline lineno="363"><highlight class="comment"></highlight></codeline>
<codeline lineno="364"><highlight class="comment">The<sp/>USER-INTEL<sp/>package<sp/>must<sp/>be<sp/>installed<sp/>via<sp/>&quot;make<sp/>yes-user-intel&quot;</highlight></codeline>
<codeline lineno="365"><highlight class="comment">before<sp/>LAMMPS<sp/>is<sp/>built.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"></highlight></codeline>
<codeline lineno="367"><highlight class="comment">E:<sp/>Pair_coeff<sp/>command<sp/>before<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="368"><highlight class="comment"></highlight></codeline>
<codeline lineno="369"><highlight class="comment">The<sp/>pair_coeff<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>before<sp/>a<sp/>read_data,</highlight></codeline>
<codeline lineno="370"><highlight class="comment">read_restart,<sp/>or<sp/>create_box<sp/>command.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"></highlight></codeline>
<codeline lineno="372"><highlight class="comment">E:<sp/>Pair_coeff<sp/>command<sp/>before<sp/>pair_style<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="373"><highlight class="comment"></highlight></codeline>
<codeline lineno="374"><highlight class="comment">Self-explanatory.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"></highlight></codeline>
<codeline lineno="376"><highlight class="comment">E:<sp/>Pair_modify<sp/>command<sp/>before<sp/>pair_style<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="377"><highlight class="comment"></highlight></codeline>
<codeline lineno="378"><highlight class="comment">Self-explanatory.</highlight></codeline>
<codeline lineno="379"><highlight class="comment"></highlight></codeline>
<codeline lineno="380"><highlight class="comment">E:<sp/>Pair_write<sp/>command<sp/>before<sp/>pair_style<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="381"><highlight class="comment"></highlight></codeline>
<codeline lineno="382"><highlight class="comment">Self-explanatory.</highlight></codeline>
<codeline lineno="383"><highlight class="comment"></highlight></codeline>
<codeline lineno="384"><highlight class="comment">E:<sp/>Processors<sp/>command<sp/>after<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="385"><highlight class="comment"></highlight></codeline>
<codeline lineno="386"><highlight class="comment">The<sp/>processors<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>after<sp/>a<sp/>read_data,<sp/>read_restart,</highlight></codeline>
<codeline lineno="387"><highlight class="comment">or<sp/>create_box<sp/>command.</highlight></codeline>
<codeline lineno="388"><highlight class="comment"></highlight></codeline>
<codeline lineno="389"><highlight class="comment">E:<sp/>Run_style<sp/>command<sp/>before<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="390"><highlight class="comment"></highlight></codeline>
<codeline lineno="391"><highlight class="comment">The<sp/>run_style<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>before<sp/>a<sp/>read_data,</highlight></codeline>
<codeline lineno="392"><highlight class="comment">read_restart,<sp/>or<sp/>create_box<sp/>command.</highlight></codeline>
<codeline lineno="393"><highlight class="comment"></highlight></codeline>
<codeline lineno="394"><highlight class="comment">E:<sp/>Units<sp/>command<sp/>after<sp/>simulation<sp/>box<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="395"><highlight class="comment"></highlight></codeline>
<codeline lineno="396"><highlight class="comment">The<sp/>units<sp/>command<sp/>cannot<sp/>be<sp/>used<sp/>after<sp/>a<sp/>read_data,<sp/>read_restart,<sp/>or</highlight></codeline>
<codeline lineno="397"><highlight class="comment">create_box<sp/>command.</highlight></codeline>
<codeline lineno="398"><highlight class="comment"></highlight></codeline>
<codeline lineno="399"><highlight class="comment">U:<sp/>Substitution<sp/>for<sp/>illegal<sp/>variable</highlight></codeline>
<codeline lineno="400"><highlight class="comment"></highlight></codeline>
<codeline lineno="401"><highlight class="comment">Input<sp/>script<sp/>line<sp/>contained<sp/>a<sp/>variable<sp/>that<sp/>could<sp/>not<sp/>be<sp/>substituted</highlight></codeline>
<codeline lineno="402"><highlight class="comment">for.</highlight></codeline>
<codeline lineno="403"><highlight class="comment"></highlight></codeline>
<codeline lineno="404"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/jfh3/shared-VM/lammps-29Oct20-user-pinn/src/input.h"/>
  </compounddef>
</doxygen>
